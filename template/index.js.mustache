"use strict";

////////////////////////////////////////////////////////////////////////////////////
// TestFairy : This is an automatically generated test case for a TestFairy session.
////////////////////////////////////////////////////////////////////////////////////

// Helpers (app agnostic)
var tester = require("./helpers/setup");
var serverConfig = require('./helpers/appium-server').local;
var interactions = require("./helpers/interactions");
var wd = require("wd");
var _ = require('underscore');
var colors = require('colors');

// Session data (app specific)
var sessionData = require('./session/sessionData.json');

// App test suite
describe((sessionData.appName + " - Android Test generated by TestFairy - source: " + sessionData.sessionUrl.underline +  "\n").magenta, function () {
  this.timeout(300000);

  var driver;
  var allPassed = true; // TODO : Find a use for this or remove

  before(function () {
    driver = wd.promiseChainRemote(serverConfig);
    require("./helpers/logging").configure(driver);

    var desired = _.clone(require("./helpers/caps").androidEmulator);
    desired.app = "session/app.apk";

    interactions.packageName = sessionData.packageName;
    interactions.driver = driver;

    return driver
      .init(desired)
      .setImplicitWaitTimeout(5000);
  });

  after(function () {
    return driver
      .quit();
  });

  afterEach(function () {
    allPassed = allPassed && this.currentTest.state === 'passed';
  });

  it("should simulate a session like ".magenta + sessionData.sessionUrl.magenta.underline, function () {
    // TF : TestFairy.begin(), time: 00:00
    console.log("\nTF : TestFairy.begin(), time: 00:00\n".magenta.underline);
    var result = interactions.begin(0);

  {{#testLines}}
    {{#input}}
      TODO 1
    {{/input}}
    {{#checkpoint}}
      TODO 2
    {{/checkpoint}}
    {{#userInteraction}}
      TODO 3
    {{/userInteraction}}
    {{#foregroundActivity}}
      TODO 4
    {{/foregroundActivity}}

  {{/testLines}}

    // TF : Clicked 'Open Blank Canvas', time: 00:05
    result = result.then(function() { console.log("\nTF : Clicked 'Open Blank Canvas', time: 00:05\n".magenta.underline); })
    result = interactions.findTextInView(result, 'Open Blank Canvas', 'android.widget.Button')
    result = interactions.click(result, driver).sleep(1000); // TODO : Use touch events from sessionData instead

    // TF : Clicked id/color_picker, time: 00:06
    result = result.then(function() { console.log("\nTF : Clicked id/color_picker, time: 00:06\n".magenta.underline); })
    result = interactions.findViewById(result, 'color_picker');
    result = interactions.click(result).sleep(2000); // TODO : Use touch events from sessionData instead

    // TF : Touched down (384, 500), time: 00:08
    result = result.then(function() { console.log("\nTF : Touched down (384, 500), time: 00:08\n".magenta.underline); })
    result = interactions.touchDown(result, 384, 500).sleep(1000);

    // TF : Touch moved (344, 500), time: 00:09
    result = result.then(function() { console.log("\nTF : Touch moved (344, 500), time: 00:09\n".magenta.underline); })
    result = interactions.touchMove(result, 344, 500).sleep(1000);

    // TF : Touched up (384, 500), time: 00:10
    result = result.then(function() { console.log("\nTF : Touched up (384, 500), time: 00:10\n".magenta.underline); })
    result = interactions.touchUp(result, 384, 500).sleep(1000);

    // TF : Clicked 'OK', time: 00:11
    result = result.then(function() { console.log("\nTF : Clicked 'OK', time: 00:11\n".magenta.underline); })
    result = interactions.findTextInView(result, 'OK', 'android.widget.Button')
    result = interactions.click(result, driver).sleep(1000); // TODO : Use touch events from sessionData instead

    // TF : Touched down (300, 480), time: 00:12
    result = result.then(function() { console.log("\nTF : Touched down (300, 480), time: 00:12\n".magenta.underline); })
    result = interactions.touchDown(result, 300, 480).sleep(1000);

    // TF : Touch moved (384, 480), time: 00:13
    result = result.then(function() { console.log("\nTF : Touch moved (384, 480), time: 00:13\n".magenta.underline); })
    result = interactions.touchMove(result, 384, 480).sleep(1000);

    // TF : Touch moved (384, 564), time: 00:14
    result = result.then(function() { console.log("\nTF : Touch moved (384, 564), time: 00:14\n".magenta.underline); })
    result = interactions.touchMove(result, 384, 564).sleep(1000);

    // TF : Touch moved (344, 564), time: 00:15
    result = result.then(function() { console.log("\nTF : Touch moved (344, 564), time: 00:15\n".magenta.underline); })
    result = interactions.touchMove(result, 300, 564).sleep(1000);

    // TF : Touch moved (344, 480), time: 00:16
    result = result.then(function() { console.log("\nTF : Touch moved (344, 480), time: 00:16\n".magenta.underline); })
    result = interactions.touchMove(result, 300, 480).sleep(1000);

    // TF : Touched up (384, 480), time: 00:17
    result = result.then(function() { console.log("\nTF : Touched up (384, 480), time: 00:17\n".magenta.underline); })
    result = interactions.touchUp(result, 384, 480).sleep(1000);

    // TF : Pressed back, time: 00:18
    result = result.then(function() { console.log("\nTF : Pressed back, time: 00:18\n".magenta.underline); })
    result = interactions.back(result).sleep(1000);

    return tester.assert.isFulfilled(result.sleep(5000));
  });
});
