/// <reference types="webdriver" />
/// <reference types="./" />
/// <reference types="webdriverio/webdriverio-core" />
import BrowserstackLocalLauncher from 'browserstack-local';
declare type BrowserstackLocal = BrowserstackLocalLauncher.Local & {
    pid?: number;
    stop(callback: (err?: any) => void): void;
};
declare type Capabilities = (WebDriver.Capabilities | WebDriver.Capabilities[]);
export default class BrowserstackLauncherService implements WebdriverIO.ServiceInstance {
    options: BrowserstackConfig;
    config: WebdriverIO.Config;
    browserstackLocal?: BrowserstackLocal;
    constructor(options: BrowserstackConfig, capabilities: Capabilities, config: WebdriverIO.Config);
    onPrepare(config?: WebdriverIO.Config, capabilities?: Capabilities): void | Promise<unknown>;
    onComplete(): true | Promise<unknown> | undefined;
}
export {};
//# sourceMappingURL=launcher.d.ts.map